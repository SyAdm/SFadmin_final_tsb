---
# roles/postgresql/tasks/main.yml

- name: Gather facts
  ansible.builtin.setup:

# üß© –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- name: Install PostgreSQL and dependencies
  ansible.builtin.apt:
    name:
      - postgresql
      - postgresql-contrib
    state: present
    update_cache: yes

# üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ PostgreSQL
- name: Detect installed PostgreSQL service name
  ansible.builtin.shell: "systemctl list-units --type=service | grep postgresql | awk '{print $1}' | head -n1"
  register: pg_service_name_raw
  changed_when: false
  failed_when: false

# ‚ö†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–∫—Ç —Å –∏–º–µ–Ω–µ–º —Å–ª—É–∂–±—ã
- name: Set pg_service_name fact
  ansible.builtin.set_fact:
    pg_service_name: "{{ pg_service_name_raw.stdout | default('postgresql') }}"

# üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–±—É PostgreSQL
- name: Ensure PostgreSQL service is started and enabled
  ansible.builtin.service:
    name: "{{ pg_service_name }}"
    state: started
    enabled: yes

# ‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
- name: Ensure /var/lib/postgresql and /etc/postgresql exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0755'
  loop:
    - /var/lib/postgresql
    - /etc/postgresql

# üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å postgres
- name: Check if system postgres user exists
  ansible.builtin.getent:
    database: passwd
    key: postgres
  register: postgres_user_check
  ignore_errors: yes

# üë§ –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
- name: Ensure system postgres user exists
  ansible.builtin.user:
    name: postgres
    shell: /bin/bash
    create_home: yes
  when: postgres_user_check.failed

# üë§ –°–æ–∑–¥–∞–µ–º PostgreSQL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- name: Ensure PostgreSQL user exists
  community.postgresql.postgresql_user:
    name: "{{ pg_user }}"
    password: "{{ pg_password }}"
    state: present
  become: yes
  become_user: postgres
  environment:
    HOME: /var/lib/postgresql

# üóÑ –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL
- name: Ensure PostgreSQL database exists
  community.postgresql.postgresql_db:
    name: "{{ pg_database }}"
    owner: "{{ pg_user }}"
    state: present
  become: yes
  become_user: postgres
  environment:
    HOME: /var/lib/postgresql

